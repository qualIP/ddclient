Description: Prevent hang if the IP address check blocks
 ddclient may hang if the read operation on the connection to get the ip (in
 sub geturl) 'blocks'.
Author: Panos
Origin: http://sourceforge.net/tracker/?func=detail&atid=676130&aid=2880462&group_id=116817
Bug-Debian: http://bugs.debian.org/600054
Applied-Upstream: http://sourceforge.net/apps/trac/ddclient/changeset/114/trunk
Last-Update: 2012-01-04

--- a/ddclient
+++ b/ddclient
@@ -1808,36 +1808,36 @@
     }
 
     if (defined $sd) {
-	## send the request to the http server
-	verbose("CONNECTED: ", $use_ssl ? 'using SSL' : 'using HTTP');
-	verbose("SENDING:", $request);
+		## send the request to the http server
+		verbose("CONNECTED: ", $use_ssl ? 'using SSL' : 'using HTTP');
+		verbose("SENDING:", $request);
 
     	$0 = sprintf("%s - sending to %s port %s", $program, $peer, $port);
-	my $result = syswrite $sd, $rq;
-	if ($result != length($rq)) {
-	    warning("cannot send to $peer:$port ($!).");
-	    
-	} else {
-	    my $timeout = 0;
-	    local $SIG{'ALRM'} = sub { $timeout = 1; };
+		my $result = syswrite $sd, $rq;
+		if ($result != length($rq)) {
+	    	warning("cannot send to $peer:$port ($!).");
+		} else {
+			$0 = sprintf("%s - reading from %s port %s", $program, $peer, $port);
+			eval {
+				local $SIG{'ALRM'} = sub { die "timeout";};
+	    		alarm(opt('timeout')) if opt('timeout') > 0;
+				while ($_ = <$sd>) {
+    	        	$0 = sprintf("%s - read from %s port %s", $program, $peer, $port);
+					verbose("RECEIVE:", "%s", define($_, "<undefined>"));
+					$reply .= $_ if defined $_;
+	    		}
+		    	if (opt('timeout') > 0) {
+					alarm(0);
+	    		}
+			};
+			close($sd);
 
-    	    $0 = sprintf("%s - reading from %s port %s", $program, $peer, $port);
-	    alarm(opt('timeout')) if opt('timeout') > 0;
-	    while (!$timeout &&  ($_ = <$sd>)) {
-    	        $0 = sprintf("%s - read from %s port %s", $program, $peer, $port);
-		verbose("RECEIVE:", "%s", define($_, "<undefined>"));
-		$reply .= $_ if defined $_;
-	    }
-	    if (opt('timeout') > 0) {
-		alarm(0);
-	    }
-	    close($sd);
-	    if ($timeout) {
-		warning("TIMEOUT: %s after %s seconds", $to, opt('timeout'));
-		$reply = '';
-	    }
-	    $reply = '' if !defined $reply;
-	}
+			if ($@ and $@ =~ /timeout/) {
+				warning("TIMEOUT: %s after %s seconds", $to, opt('timeout'));
+				$reply = '';
+	    	}
+	    		$reply = '' if !defined $reply;
+		}
     }
     $0 = sprintf("%s - closed %s port %s", $program, $peer, $port);
 
