#! /bin/sh
## postinst script for ddclient
##
## see: dh_installdeb(1)


set -e

## summary of how this script can be called:
##        * <postinst> `configure' <most-recently-configured-version>
##        * <old-postinst> `abort-upgrade' <new version>
##        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
##          <new-version>
##        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
##          <failed-install-package> <version> `removing'
##          <conflicting-package> <version>
## for details, see /usr/doc/packaging-manual/
##
## quoting from the policy:
##     Any necessary prompting should almost always be confined to the
##     post-installation script, and should be protected with a conditional
##     so that unnecessary prompting doesn't happen if a package's
##     installation fails and the `postinst' is called with `abort-upgrade',
##     `abort-remove' or `abort-deconfigure'.
#


case "$1" in
  configure)
	
  # include debconf library
  . /usr/share/debconf/confmodule
  
  # check if we use the right debconf version
  db_version 2.0 || { echo "ddclient.config: \
    need DebConf 2.0 or later"; exit 1; }

	
  # if /etc/ddclient.conf does not exist:
  if [ ! -f /etc/ddclient.conf ]; then
    # get the values from the debconf database
    db_get ddclient/protocol 		&& protocol="$RET"
    db_get ddclient/server   		&& server="$RET"
    db_get ddclient/names    		&& names="$RET"
    db_get ddclient/username 		&& username="$RET"
    db_get ddclient/password \
      && password=$(echo "$RET"|sed -e "s/'/\\\\'/g")
    db_get ddclient/interface 		&& interface="$RET"


    # create configuration file /etc/ddclient.conf
    config=`mktemp /etc/ddclient.conf.XXXXXX`
    trap "rm -f $config; exit 1" HUP INT QUIT TERM
    cat <<EOF >>"$config"
# Configuration file for ddclient generated by debconf
#
# /etc/ddclient.conf

pid=/var/run/ddclient.pid
protocol=$protocol
use=if, if=$interface
server=$server
login=$username
password='$password'
$names
EOF
    mv $config /etc/ddclient.conf


    # create /etc/default/ddclient if it does not exist
    if [ ! -f /etc/default/ddclient ]; then
      db_get ddclient/run_daemon			&& run_daemon="$RET"
      db_get ddclient/daemon_interval		&& daemon_interval="$RET"
      db_get ddclient/run_ipup				&& run_ipup="$RET"
      temp=`mktemp /etc/default/ddclient.XXXXXX`
      trap "rm -f $temp; exit 1" HUP INT QUIT TERM
      cat <<EOF >"$temp"
# Configuration for ddclient scripts 
# generated from debconf on $(date)
#
# /etc/default/ddclient

# Set to "true" if ddclient should be run every time a new ppp connection is 
# established. This might be useful, if you are using dial-on-demand
run_ipup="$run_ipup"

# Set to "true" if ddclient should run in daemon mode
run_daemon="$run_daemon"

# Set the time interval between the updates of the dynamic DNS name in seconds.
# This option only takes effect if the ddclient runs in daemon mode.
daemon_interval="$daemon_interval"
EOF
      mv $temp /etc/default/ddclient
	

    fi
  fi

  db_stop

    ;;


    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

